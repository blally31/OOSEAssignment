/****************************************************************************
** FILE: BusinessUnit.java
** AUTHOR: Brendan Lally
** STUDENT ID: 18407220
** UNIT: COMP2003 (Object Oriented Software Engineering)
** PURPOSE: Represents a business as a subclass of property.
** LAST MOD: 25/10/16
****************************************************************************
**/

public class BusinessUnit extends Property {
	
	private double revenue; //The yearly revenue generated by the business unit
	private double wagePayment; //Combined yearly wages of all the business unit employees

	public BusinessUnit() {
		name = "";
		owner = "";
		value = 0.0;
		revenue = 0.0;
		wagePayment = 0.0;
	}

	public BusinessUnit(String inName, String inOwner, double inValue, double inRevenue, double inWages) {
		name = inName;
		owner = inOwner;
		value = inValue;
		revenue = inRevenue;
		wagePayment = inWages;
	}
	
	@Override
	public String getOwner() {
		if (owner.equals("")) {
			owner = "Unnamed Owner";
		}
		return owner;
	}

	/**
   * Method for increasing the revenue for a business unit. The revenue is
   * only ever increased by 5% at a time. 
   *
   * @param 	none.
   * @return 	nothing.
   */
	@Override
	public void increaseRevenue() {
		revenue *= 1.05;
	}

	/**
   * Method for decreasing the revenue for a business unit. The revenue is
   * only ever decreased by 5% at a time. 
   *
   * @param 	none.
   * @return 	nothing.
   */
	@Override
	public void decreaseRevenue() {
		revenue *= 0.95;
	}
	
	/**
   * Method for increasing the wage payments for a business unit. The wages are
   * only ever increased by 5% at a time. 
   *
   * @param 	none.
   * @return 	nothing.
   */
	@Override
	public void increaseWagePayment() {
		wagePayment *= 1.05;
	}

	/**
   * Method for decreasing the wage payments for a business unit. The wages are
   * only ever decreased by 5% at a time. 
   *
   * @param 	none.
   * @return 	nothing.
   */
	@Override
	public void decreaseWagePayment() {
		wagePayment *= 0.95;
	}

	/**
   * Method for calculating the profit for a business unit. The profit is
   * calculated as the business revenue subtract the employee's wages. 
   *
   * @param 	none.
   * @return 	profit.
   */
	@Override
	public double calcProfit() {
		
		double profit = revenue - wagePayment;

		return profit;
	}	
}